{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api/api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","Poster","alt","Title","Plot","MoviesList","props","movies","map","imdbID","getMovieFromServer","title","a","fetch","response","ok","Error","status","statusText","json","FindMovie","handleSetMovies","useState","inputValue","setInputValue","setMovie","isInputChanged","setIsInputChanged","isFindButtonClicked","setIsFindButtonClicke","findMovie","movieFromServer","Response","htmlFor","type","id","placeholder","value","onChange","event","target","onClick","foundMovie","disabled","App","setMovies","find","item","prev","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c7c39be6.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => {\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","const API_KEY = 'f18ec38e';\n\nexport const getMovieFromServer = async (title: string) => {\n  const response = await fetch(`https://www.omdbapi.com/?apikey=${API_KEY}&t=${title}`);\n\n  if (!response.ok) {\n    throw new Error(`${response.status}: ${response.statusText}`);\n  }\n\n  return response.json();\n};\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useState } from 'react';\nimport './FindMovie.scss';\nimport { getMovieFromServer } from '../../api/api';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  handleSetMovies(movie: Movie): void;\n};\n\nexport const FindMovie: React.FC<Props> = ({ handleSetMovies }) => {\n  const [inputValue, setInputValue] = useState<string>('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [isInputChanged, setIsInputChanged] = useState<boolean>(false);\n  const [isFindButtonClicked, setIsFindButtonClicke] = useState<boolean>(false);\n\n  const findMovie = async (title: string) => {\n    try {\n      const movieFromServer = await getMovieFromServer(title);\n\n      if (movieFromServer.Response === 'True') {\n        setMovie(movieFromServer);\n      } else {\n        setMovie(null);\n      }\n    } catch {\n      throw new Error('Loading failed');\n    }\n\n    setIsFindButtonClicke(true);\n  };\n\n  const handleInputChanged = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setInputValue(event.target.value);\n    setIsInputChanged(true);\n  };\n\n  const handleAddMovieToTheList = (foundMovie: Movie) => {\n    if (foundMovie) {\n      handleSetMovies(foundMovie);\n    }\n\n    setInputValue('');\n    setIsInputChanged(false);\n    setIsFindButtonClicke(false);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-danger\"\n              value={inputValue}\n              onChange={handleInputChanged}\n            />\n          </div>\n\n          {\n            (!movie && isInputChanged && inputValue && isFindButtonClicked) && (\n              <p className=\"help is-danger\">\n                Can&apos;t find a movie with such a title\n              </p>\n            )\n          }\n\n          {\n            ((isInputChanged && !inputValue) || (!inputValue && isFindButtonClicked)) && (\n              <p className=\"help is-danger\">\n                Please enter title of the film\n              </p>\n            )\n          }\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={() => findMovie(inputValue)}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={() => movie && handleAddMovieToTheList(movie)}\n              disabled={!isFindButtonClicked || !movie}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {\n          movie && <MovieCard movie={movie} />\n        }\n      </div>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const handleSetMovies = (movie: Movie) => {\n    if (!movies.find(item => movie.imdbID === item.imdbID)) {\n      setMovies((prev) => ([\n        ...prev,\n        movie,\n      ]));\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie\n          handleSetMovies={handleSetMovies}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}